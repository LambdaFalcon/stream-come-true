###############################################################################
# SETTINGS

# latest LTS that works well with create-react-app
image: docker:stable

services:
  - docker:dind

variables:
  NODE: node:10.15.3
  IMAGE_TAG_STAGING: stream-come-true:staging
  IMAGE_TAG_LATEST: stream-come-true:latest

stages:
  - build
  - lint
  - test
  - deploy

###############################################################################
# BUILD STAGE

server install:
  image: $NODE
  stage: build
  script:
    - npm ci --prefix server
  artifacts:
    paths:
      - server/node_modules/
  only:
    changes:
      - server/**/*

client build:
  image: $NODE
  stage: build
  script:
    - npm ci --prefix client
    - npm run build --prefix client
  artifacts:
    paths:
      - client/build/
      - client/node_modules/
  only:
    changes:
      - client/**/*

###############################################################################
# LINT STAGE

server lint:
  image: $NODE
  stage: lint
  script:
    - npm run lint --prefix server
  dependencies:
    - server install
  only:
    changes:
      - server/**/*

###############################################################################
# TEST STAGE

server test:
  image: $NODE
  stage: test
  script:
    - npm ci --prefix server
    - npm run cov --prefix server
  coverage: '/All files\s*\|\s*([0-9.]+)/'
  dependencies:
    - server install
    - client build
  only:
    changes:
      - server/**/*

client test:
  image: $NODE
  stage: test
  script:
    - npm test --prefix client
  dependencies:
    - client build
  only:
    changes:
      - client/**/*

###############################################################################
# DEPLOY STAGE

deploy as staging:
  stage: deploy
  tags:
    - dind
  script:
    - docker info
    - docker build -t $IMAGE_TAG_STAGING .
    - docker image ls
    - echo "$REGISTRY_PASSWORD" | docker login --username $REGISTRY_USER --password-stdin
    - docker tag $IMAGE_TAG_STAGING $REGISTRY_USER/$IMAGE_TAG_STAGING
    - docker push $REGISTRY_USER/$IMAGE_TAG_STAGING
  only:
    refs:
      - dev
    changes:
      - client/**/*
      - server/**/*

deploy as latest:
  stage: deploy
  tags:
    - dind
  script:
    - docker info
    - docker build -t $IMAGE_TAG_LATEST .
    - docker image ls
    - echo "$REGISTRY_PASSWORD" | docker login --username $REGISTRY_USER --password-stdin
    - docker tag $IMAGE_TAG_LATEST $REGISTRY_USER/$IMAGE_TAG_LATEST
    - docker push $REGISTRY_USER/$IMAGE_TAG_LATEST
  only:
    refs:
      - master
    changes:
      - client/**/*
      - server/**/*
