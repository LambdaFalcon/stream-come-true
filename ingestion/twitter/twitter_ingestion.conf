input {
  twitter {
    id => "tweets_stream"
    consumer_key => "${CONSUMER_KEY}"
    consumer_secret => "${CONSUMER_SECRET}"
    oauth_token => "${OAUTH_TOKEN}"
    oauth_token_secret => "${OAUTH_TOKEN_SECRET}"
    keywords => ["apex legends", "fortnite"]
    full_tweet => true
    ignore_retweets => true
    languages => ["en"]
  }
}

filter {

    # Add domain field to differentiate between multiple sources
    mutate {
        add_field => {"tweet_id" => "%{[id]}"}
        add_field => { "domain" => "fornite" }    
    }

    # Change domain according the keywords
    if [text] =~ /(?i)apex legends/ {
        mutate {
        update => {"domain" => "apexlegends"}  
        }
    } 

    # Parsing date coming from this format Sat May 04 13:32:28 +0000 2019
    date {
        match => ["created_at", "EEE MMM dd HH:mm:ss Z yyyy"]
        target => "created_at"
    }

    if [user] {
        mutate {
            add_field => {
                "user_id" => "%{[user][id]}"
                "screen_name" => "%{[user][screen_name]}"
                "followers_count" => "%{[user][followers_count]}"
                "user_image" => "%{[user][profile_image_url_https]}"
            }
        }
    }

    if [extended_tweet][full_text] {
        ruby {
          code => "event.set('hashtags', event.get('[extended_tweet][full_text]').scan(/\#[a-z]*/i))"
        }
        # If the tweet has more than 140 characters, the full text is stored in extended_tweet
        mutate {
            update => { "text" => "%{[extended_tweet][full_text]}" }
        }
    } 

    else {
        ruby {
          code => "event.set('hashtags', event.get('text').scan(/\#[a-z]*/i))"
        }   
    }

    # Get the coordinates array [lon, lat] from the coordinates object
    if [coordinates] {
        ruby {
            code => "event.set('tweet_coordinates', event.get('[coordinates][coordinates]'))"
        }        
    }

    prune {
        whitelist_names => [ "^tweet_id$", "^domain$", "^user_id$", "followers_count", "^screen_name$",
        "^text$", "^hashtags$", ""^tweet_coordinates$"", "^created_at$", "@timestamp", "^user_image$" ]
    }

}

output {
    elasticsearch {
        hosts => ["rhea1.inf.usi.ch:9200"]
        index => "tweets"
        document_id => "%{[tweet_id]}"
    }
}
